
###############################################################################
# @file build.template
# @brief Makefile Template
#
# Related Files:
# @li build.pl - Load Build Script
# @li build.xml - Load Build Schema
#
# Copyright (C) 2009 Lissy Lau <Lissy.Lau@gmail.com>
#
# MasterMind is free software: you can redistribute it and / or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
###############################################################################

MODULEDIR    = $(patsubst %, $(TOPDIR)/%, $(MODULE)) 
INSTALL      = /usr/bin/install
CC           = g++
AR           = $(CC)
ARFLAGS      = -shared
RM           = rm -rf
CXXFLAGS     = -O3 -g -fno-builtin -Wall -Wwrite-strings -Wsign-compare -Werror
LDFLAGS      = -lpthread -lstdc++
CPPFLAGS     = -I./
LIBPATH      = -L./
LINK         = $(CC) -o ../../bin/$@ $^
ARCLIB       = $(AR) $(ARFLAGS) -o ../../lib/lib$@.so $^ $(LDFLAGS) $(LIBPATH)

include $(patsubst %, %/Build.mk, $(MODULEDIR))

ifneq (,$(ARCHIVE))
    ifneq (,$(PROGRAM))
        DEPEND += $(ARCHIVE) $(PROGRAM)
    else
        DEPEND += $(ARCHIVE)
    endif
else
    ifneq (,$(PROGRAM))
        DEPEND += $(PROGRAM)
    endif
endif

APP_VAR  = $($(PROGRAM)_SRC) 
ARC_VAR  = $($(ARCHIVE)_SRC) 
APP_OBJS = $(patsubst %.cpp,%.o,$(APP_VAR)) 
ARC_OBJS = $(patsubst %.cpp,%.o,$(ARC_VAR)) 

%.o: %.cpp, %.hpp
	@(echo compiling $@)
	$(CC) -c $< -o $@ $(CPPFLAGS) $(CXXFLAGS)

all: $(DEPEND)
	@(echo done)

$(ARCHIVE): $(ARC_OBJS)
	@(echo creating archive $(LIB))
	$(ARCLIB)

$(PROGRAM): $(APP_OBJS)
	@(echo creating executing file $(BIN))
	$(LINK)

.PHONY: clean_objs clean_libs clean_bins 

clean_objs: 
	$(RM) $(MODULEDIR)/*.o 

clean_libs: 
	$(RM) ../../lib/*

clean_bins:
	$(RM) ../../bin/*

